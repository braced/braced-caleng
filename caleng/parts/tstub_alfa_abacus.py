from shapely.geometry import LineString as L
from shapely.geometry import Point
import numpy as np

# THIS IS THE OLD DATA

# LINE4_45 = L([(0.73, 1.4), (0.74, 1.06), (0.79, 0.60),
#               (0.83, 0.40), (0.86, 0.30), (0.89, 0.24)])

# LINE4_5_ = L([(0.70, 1.4), (0.74, 1.02), (0.79, 0.50),
#               (0.84, 0.30), (0.89, 0.20)])

# LINE4_75 = L([(0.62, 1.4), (0.66, 0.76), (0.70, 0.54),
#               (0.76, 0.36), (0.83, 0.21), (0.88, 0.13)])

# LINE5___ = L([(0.55, 1.4), (0.56, 0.93), (0.60, 0.64),
#               (0.66, 0.43), (0.76, 0.26), (0.88, 0.09)])

# LINE5_5_ = L([(0.46, 1.4), (0.47, 0.78), (0.51, 0.56), (0.58, 0.42),
#               (0.66, 0.28), (0.73, 0.20), (0.82, 0.11), (0.89, 0.06)])

# LINE6___ = L([(0.39, 1.4), (0.39, 0.78), (0.44, 0.56), (0.51, 0.40),
#               (0.56, 0.32), (0.65, 0.23), (0.73, 0.16), (0.89, 0.06)])

# LINE2PI_ = L([(0.35, 1.4), (0.35, 0.73), (0.37, 0.58), (0.44, 0.40),
#               (0.52, 0.28), (0.63, 0.18), (0.79, 0.08), (0.89, 0.05)])

# LINE7___ = L([(0.29, 1.4), (0.29, 0.54), (0.31, 0.46), (0.35, 0.36),
#               (0.44, 0.25), (0.54, 0.17), (0.69, 0.09), (0.79, 0.06),
#               (0.88, 0.03)])

# LINE8___ = L([(0.23, 1.4), (0.23, 0.45), (0.25, 0.35), (0.32, 0.26),
#               (0.42, 0.17), (0.54, 0.12), (0.65, 0.07), (0.77, 0.04),
#               (0.89, 0.02)])


# THIS IS THE WebPlotDigitizer GENERATED DATA

LINE4_45 = L([
    (0.7309567695204695, 1.4),
    (0.7327621078221364, 1.29758889697018),
    (0.734537556416822, 1.2160278572069065),
    (0.7362621925096394, 1.1682825374368582),
    (0.738010740368042, 1.1046239376699978),
    (0.7430919905548528, 1.0230519383474976),
    (0.7498500533033108, 0.9255611792485728),
    (0.7582460719943409, 0.838010740368042),
    (0.766639101714673, 0.7524494614871127),
    (0.778364833763413, 0.6489747830505436),
    (0.7933844115214859, 0.553445785053154),
    (0.8067122318644204, 0.4837813468301968),
    (0.8216929530034174, 0.4141114288276262),
    (0.8383176080263828, 0.35040351104424694),
    (0.8582390977293788, 0.2926521137004454),
    (0.9, 0.23686247745817957),
])
LINE4_5_ = L([
    (0.6978987535992188, 1.4),
    (0.7013151471071746, 1.3255412527772519),
    (0.7047106178202434, 1.2658554932299815),
    (0.7081359782402935, 1.186278133686696),
    (0.7132142394564059, 1.1066952943637975),
    (0.718280544789726, 1.035069095039305),
    (0.726676563480756, 0.9475186561587742),
    (0.7317249349898873, 0.8878274168318903),
    (0.7384262072950812, 0.8281306977253934),
    (0.7468042921619225, 0.7525152188424714),
    (0.7551554762924808, 0.6948021799559626),
    (0.7635066604230389, 0.6370891410694538),
    (0.7718578445535973, 0.5793761021829449),
    (0.7818529625681239, 0.5276250635156274),
    (0.7935129372615051, 0.4679119050702909),
    (0.8068317906923455, 0.4042149468461378),
    (0.8184588867080473, 0.3663825483964174),
    (0.8334156960814596, 0.31262591039065857),
    (0.8583048550847374, 0.24889059370921318),
    (0.9, 0.20106307724496597),

])
LINE4_75 = L([
    (0.6136008130000299, 1.4),
    (0.6186760852454444, 1.3218369217587105),
    (0.6220954677240982, 1.246237882214628),
    (0.6271468282039275, 1.1845574828881429),
    (0.6305303430342037, 1.1328283633392782),
    (0.633934780659367, 1.067175123793203),
    (0.6389980970219888, 0.997538084468312),
    (0.6423965567057558, 0.93586316492144),
    (0.6491336966593271, 0.8522965258197253),
    (0.6541850571391565, 0.7906161264932401),
    (0.6608952963564447, 0.7249519273879386),
    (0.6742261056700773, 0.6532983291653798),
    (0.6875449591009176, 0.589601370941227),
    (0.705834470802738, 0.5179313333798286),
    (0.7207853022347539, 0.4681530153732729),
    (0.732415387221154, 0.4283314569239507),
    (0.7490161304785342, 0.38053681913738324),
    (0.7639490280863614, 0.342693461128436),
    (0.7821937052277099, 0.3008608235610597),
    (0.8054060516693402, 0.2530442666560393),
    (0.8335830784405545, 0.20123295041297617),
    (0.8551216012912353, 0.16734599328477917),
    (0.9, 0.12745867748009854),

])
LINE5___ = L([
    (0.5441789795654037, 1.4),
    (0.5476342296924349, 1.300191792286463),
    (0.5510835018780699, 1.204701152746366),
    (0.5545148402395162, 1.1211454732038777),
    (0.5579700903665474, 1.0216765136645778),
    (0.5614432743177675, 0.9102725941276689),
    (0.5698422819794957, 0.8207329952475367),
    (0.5832448265898833, 0.7013395570345426),
    (0.6015522721158924, 0.6177345594755353),
    (0.6214976735844733, 0.5440698821349224),
    (0.6497135569747631, 0.46639948589703994),
    (0.6779174844822605, 0.3966857296575639),
    (0.7060975002241728, 0.34288525341489895),
    (0.7458717333041079, 0.27313313871813016),
    (0.7790044734928114, 0.22329454313582886),
    (0.8270372326116631, 0.1574933495401969),
    (0.8584991381801155, 0.11959519373511762),
    (0.9, 0.08568083770885448),

])
LINE5_5_ = L([
    (0.45492233657802705, 1.4),
    (0.456682840319222, 1.328341420159611),
    (0.45847323376739835, 1.2368345803983303),
    (0.46029052795185765, 1.127425300640636),
    (0.4637427891081909, 1.0299455011009377),
    (0.465557094321952, 0.922525381342845),
    (0.46734748777012813, 0.8310185415815641),
    (0.47408462772369964, 0.7474519024798495),
    (0.4874303818908229, 0.6658525042592833),
    (0.5057228825633412, 0.5921933066982834),
    (0.5306269864201097, 0.5185121900188308),
    (0.5488806304735526, 0.4707120724526499),
    (0.5737518556526418, 0.41891171576881314),
    (0.6069025296655342, 0.3571381601889032),
    (0.6433500383584574, 0.3013211250485708),
    (0.6847502714981718, 0.24946597056860198),
    (0.726147515667188, 0.19959997608823454),
    (0.7576004543235462, 0.1676693002819596),
    (0.7989767756976758, 0.1317274257988026),
    (0.8420059978678676, 0.09578007153603219),
    (0.9, 0.06380555749285133),

])
LINE6___ = L([
    (0.38880331576482785, 1.4),
    (0.39076109157209904, 1.1992652113700446),
    (0.3894040988751507, 1.0023438511891123),
    (0.3947364226006037, 0.7536824119000888),
    (0.4014227500523071, 0.7039314927915993),
    (0.41141786806683345, 0.6521804541242816),
    (0.4280365451484024, 0.5924508563401051),
    (0.44961691358885725, 0.5307156592174878),
    (0.47450009465073884, 0.4709586625352451),
    (0.5076567466050275, 0.405206786956132),
    (0.5358248064641473, 0.3593629507118734),
    (0.5672956789446941, 0.3154973149079896),
    (0.6037282427841266, 0.26962607976566466),
    (0.6467724098078091, 0.22373292550488721),
    (0.6815311500562924, 0.19179129013938567),
    (0.7344867439149538, 0.14984357720013164),
    (0.7857804700654585, 0.11386882403929532),
    (0.8403710308959937, 0.08385059131803652),
    (0.9, 0.0598272374936486),
])
LINE2PI_ = L([
    (0.345827895067202, 1.4),
    (0.3459175641881457, 1.3426326853909076),
    (0.3460012553676931, 1.2869362054020665),
    (0.34778268190377515, 1.20139684563959),
    (0.3480875569149837, 0.9985025256802401),
    (0.3500393547808587, 0.7995810459404797),
    (0.3501589136087836, 0.7200146459564208),
    (0.3585369984756249, 0.6443991670734989),
    (0.3735266865267164, 0.5687617690721238),
    (0.40009265809164185, 0.48910769261425346),
    (0.42995247536589987, 0.4173992965955624),
    (0.47138259821259554, 0.34565254211957885),
    (0.5127917982644045, 0.2878299076408055),
    (0.5657713038886509, 0.22996891470473968),
    (0.6336269166774603, 0.17205860375215454),
    (0.6998087058753201, 0.12807789257639324),
    (0.7593579690940431, 0.0980432205162951),
    (0.8056750590321713, 0.07401986669190674),
    (0.9, 0.04391943727644976),
])


LINE7___ = L([
    (0.28632645537964907, 1.4),
    (0.28843069075112826, 1.1001469577259912),
    (0.2888790363558469, 0.8017729577857706),
    (0.289267602546603, 0.5431821578375795),
    (0.29593898514481576, 0.5033770387270973),
    (0.30757504807261216, 0.4595771602785721),
    (0.3291404716595763, 0.40778776315396215),
    (0.3656059141766881, 0.3400357680160211),
    (0.40866502605386124, 0.28419681375723593),
    (0.44177385447698003, 0.25027149817174643),
    (0.4831531648218075, 0.21234046368898785),
    (0.5394145602725942, 0.17038179119050723),
    (0.5923552092777651, 0.13837987824926024),
    (0.6370193984198309, 0.11436200420448572),
    (0.6816776096205004, 0.0943224501589135),
    (0.7395620161603683, 0.07224989787683467),
    (0.7875200510117668, 0.056177704271239026),
    (0.8305134055335812, 0.044100270003686326),
    (0.9, 0.030000797058853168),
])


LINE8___ = L([
    (0.22681903775069986, 1.4),
    (0.2286393209058574, 1.2913035897538085),
    (0.22884854885472602, 1.1520623897817057),
    (0.23073160039454407, 0.9988915900327793),
    (0.23095577319690339, 0.849704590062669),
    (0.23121282467694207, 0.6786368300969425),
    (0.2331855453377039, 0.46579123035997183),
    (0.23656009325588576, 0.4200295908099114),
    (0.2448813876794628, 0.3822081519194176),
    (0.25815540654983116, 0.34834859368928695),
    (0.2813528081379709, 0.3104778367822738),
    (0.31282069164781956, 0.2686013609779916),
    (0.3409648397413544, 0.23867080473054458),
    (0.3773764807859, 0.20672368958543008),
    (0.41874084627723707, 0.17873845510067854),
    (0.4551375424682921, 0.1567371399535713),
    (0.4931841504847114, 0.13671950502645247),
    (0.5428040530442667, 0.11467435164243978),
    (0.5891121760703005, 0.09661847781685595),
    (0.6254939274078649, 0.08456296266775598),
    (0.6684932598710758, 0.06850720840100033),
    (0.7296715121202763, 0.05438033655810082),
    (0.7693560760792677, 0.044303021849375845),
    (0.833837140949895, 0.03215435044685111),
    (0.9, 0.022044157060447045),
])

ALFA_LINES = [
    (4.45, LINE4_45),
    (4.50, LINE4_5_),
    (4.75, LINE4_75),
    (5.00, LINE5___),
    (5.50, LINE5_5_),
    (6.00, LINE6___),
    (2.00 * np.pi, LINE2PI_),
    (7.00, LINE7___),
    (8.00, LINE8___),
]


def get_alfa(lambda1, lambda2):
    """ This function is based on the abacus of eurocode 3 Figure 6.11
        Its a hack I made. Gets and returns python floats """
    if not 0.00 <= lambda1 <= 0.90:
        raise Exception("lambda1 must be between 0 and 0.90")
    if not 0.00 <= lambda2:
        raise Exception("lambda2 must be between 0 and 1.40")
    if lambda2 >= 1.40:
        lambda2 = 1.40

    target_point = Point(lambda1, lambda2)
    alfas_dists = []

    nearest_point_8 = LINE8___.interpolate(LINE8___.project(target_point))
    nearest_point_4 = LINE4_45.interpolate(LINE4_45.project(target_point))

    # If point is at left of 8 curve, alfa is 8
    if target_point.x < nearest_point_8.x\
            or target_point.y < nearest_point_8.y:
        return 8.00

    # Same for 4.45 curve
    elif target_point.x > nearest_point_4.x\
            or target_point.y > nearest_point_4.y:
        return 4.45

    # If point between curves, interpolation.
    else:
        for line in ALFA_LINES:
            alfa = line[0]
            distance = target_point.distance(line[1])
            alfas_dists.append((alfa, distance))
        alfas_dists = sorted(alfas_dists, key=lambda x: x[1])

        alfa1 = alfas_dists[0][0]
        alfa2 = alfas_dists[1][0]
        dist1 = alfas_dists[0][1]
        dist2 = alfas_dists[1][1]

        total_dist = dist1 + dist2
        pound_alfa1 = alfa1 * dist2
        pound_alfa2 = alfa2 * dist1

        alfa = (pound_alfa1 + pound_alfa2) / total_dist

        return alfa
